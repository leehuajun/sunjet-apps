<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx.xsd
          http://www.springframework.org/schema/data/jpa
          http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <!-- 配置自动扫描的包 -->
    <!--<context:component-scan core-package="com.wd"/>-->

    <!-- 1. 配置数据源 -->
    <context:property-placeholder location="classpath*:db.properties"/>
    <bean id="dataSource-origin" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${poms.jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${poms.jdbc.jdbcUrl}"/>
        <property name="user" value="${poms.jdbc.username}"/>
        <property name="password" value="${poms.jdbc.password}"/>
    </bean>

    <!-- 2. 配置 JPA 的 EntityManagerFactory -->
    <bean id="entityManagerFactory-origin" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource-origin"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="packagesToScan" value="com.wd.model.origin"/>
        <property name="jpaProperties">
            <props>
                <!-- 生成的数据表的列的映射策略 -->
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <!-- hibernate 基本属性 -->
                <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.hbm2ddl.auto">none</prop>
            </props>
        </property>
    </bean>

    <!-- 3. 配置事务管理器 -->
    <bean id="transactionManager-origin" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory-origin"/>
    </bean>

    <!-- 4. 配置支持注解的事务 -->
    <tx:annotation-driven transaction-manager="transactionManager-origin"/>

    <!-- 5. 配置 SpringData -->
    <jpa:repositories base-package="com.wd.repository.origin"
                      entity-manager-factory-ref="entityManagerFactory-origin"
                      transaction-manager-ref="transactionManager-origin"/>

    <!-- 建立视图内拦截器来解决JPA中访问延迟加载属性时产生的无会话异常 -->
    <!-- LazyInitializationException: could not initialize proxy no session -->
    <!-- 此拦截器会注入到servlet配置中的DefaultAnnotationHandlerMapping中 -->
    <!--<bean name="openEntityManagerInViewInterceptor"-->
    <!--class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor">-->
    <!--<property name="entityManagerFactory">-->
    <!--<ref bean="entityManagerFactory" />-->
    <!--</property>-->
    <!--</bean>-->
</beans>